Program 1:
Execution Stack: 
v=20
{for(v=0; v<3; v=v+1); print(10*v)}

Symbols Table: 

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{for(v=0; v<3; v=v+1); print(10*v)}

Symbols Table: 
v = 20

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
for(v=0; v<3; v=v+1)
print(10*v)

Symbols Table: 
v = 20

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v=0
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 20

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v=v+1}); v=v+1}
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v=v+1})
v=v+1
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v=v+1
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
{print(v); v=v+1}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 1

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
print(v)
v=v+1

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v=v+1}); v=v+1}
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
v=v+1

Symbols Table: 
v = 0

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v=v+1})
v=v+1
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v=v+1
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
{print(v); v=v+1}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 2

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
print(v)
v=v+1

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v=v+1}); v=v+1}
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
v=v+1

Symbols Table: 
v = 1

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v=v+1})
v=v+1
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v=v+1
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
{print(v); v=v+1}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 3

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
print(v)
v=v+1

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
print(10*v)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
v=v+1

Symbols Table: 
v = 2

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 

Symbols Table: 
v = 3

Output: 
0
1
2
30

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 

Symbols Table: 
v = 3

Output: 
0
1
2
30

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v=20
{for(v=5; v<3; v=v+1); print(10*v)}

Symbols Table: 

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{for(v=5; v<3; v=v+1); print(10*v)}

Symbols Table: 
v = 20

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
for(v=5; v<3; v=v+1)
print(10*v)

Symbols Table: 
v = 20

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v=5
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 20

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v=v+1}); v=v+1}
print(10*v)

Symbols Table: 
v = 5

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
print(10*v)

Symbols Table: 
v = 5

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 

Symbols Table: 
v = 5

Output: 
50

FileTable: 

Heap: 
-------
